o Sistema operacional e um cojunto de rotinas que conhecemos como nucleo do sistema , tbm chamado de kernel, que tem por função realizar o controle e tratamento de interrupções e exceções.

system call que pode ser explicito ou implicito 

explicito, há uma instrução de qual chamada devera ser executada no proprio programa 

implicito , há a inserção de um comando da linguagem de programação 


Tipos de arquitetura do nucleo ---------------------------------------------------------------------------------------------------------------------------------------

Monolitica, modulos executados separadamente mas que compoem um unico executavel

Camadas , devido a complexidade do sistema , ele e dividido em niveis e suas funções so podem ser utilizadas por camadas superiores

Maquina virtual , faz o intermedio entre o hardware e o sistema operacional , pode haver varias maquinas virtuais em uma unica maquina 

MicroKernel , menor e mais simples , trata servições por processos que oferece funções

------------------------------------------------------------------------------------------------------------------------------------------------------------------

Hardware - os dados do processo ficam armazenados nos registradores (status,pc e sp)

Sofware - há a espeficiação de recursos e suas limitações para que possam ser alocados os processos , nome, pid , ownerm m, prioridade , data hora 

Armazenamento - refere - se á área de memoria que sera alocado o processo que possa ser executado(um app por exemplo)

----------------------------------------------------------------------------------------------------------------------------------------------

Processos são programas ou tarefas em execução e o Sistema operacional e o responsavel por adm, por meio do gerenciador de processos .

muito normal um processo fazer abrir outros processos , por precisar buscar outras informações.

-----------------------------------------------------------------------------------------------------------------------------------------------------------

CPU é responsavel por altenar os programas , executando os por dezenas ou centenas de milissegundos , para que cada um tenha acesso ao processamento , dando a ilusão ao usuario de paralelismo ou pseudoparelismo 

o pseudoparelismo  e a falsa impressão de que todos os programas estão executando ao mesmo tempo, mas na verdade o que acontece e que tudo e executado aos poucos.

o sistema busca sempre colocar o processo mais prioritario em primeiro , na frente de outros 

------------------------------------------------------------------------------------------------------------------------------------

Estado do processo 

o processo está EM EXECUÇÃO enquanto é processado pela UCP , sendo que os processos revezam o tempo de processamento.

Quando o processo se encontra no ESTADO DE PRONTO , quer dizer que o processo esta aguardando para ser processado.

Estado de espera acontece quando o processo agurda um recurso para continuar o processamento ou aguardando o tratamento do evento.

-----------------------------------------------------------------------------------------------------------------------------------------------------------

o S.O se comunica com o usuario de tres formas , atraves de procedimentos proprios do sistemas , por meio da interação com os aplicativos ou ainda , atraves das linguagens de comando 

Modo Usuario - isso quer dizer que apenas instruções chamadas não previlegiadas poderão ser executadas e , por isso , uma quantidade menor de instruções a executar

Modo kernel - o sistema operacional tem acesso irrestrito as instruções do processador .

Buffer - armazenara temporariamente as informações para que sejam acessados.

TRATAMENTO DE ERROS 

EXCLUSÃO MUTUA - esse mecanismo impede que dois ou mais processos sejam executados compartilhando o mesmo recurso simultaneamente

SINCRONIZAÇÃO CONDICIONAL : implementa a sincronização de execução dos processos associados a uma verificação condional de acesso a região critica 

SEMAFOROS - este mecanismo foi implementado por Dijkstra em 1965 , permite a pratica de exclusão mutua com a inserção de condição para acesso a região critica e execução dos processos 


--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Algoritimo de Dijkstra - sicronização de tempo para que os recursos do programa todos sejam processados, quando um acabar , ir pra outro. (se houver recursos)
------------------------------------------------------------------------------------------------------------------------------------------------------------------

Escalonador de processos - objetivos 

Dar previlegios para aplicação criticas 

Balancear o uso de CPU entre processos.

Ser justo com todos os processos , pois todos devem poder usar o processador 

Maximizar a produtividade(throughput).

Porporcionar menores tempos de resposta para usuarios 

interativos.


PREEMPTIVO - compartilhamento de tempo e recursos.

intercala os processos em execução


NÃO PREEMPTIVO 

RECURSOS DEDICADOS 

SÓ HÁ liberação quando o processo é finalizado ou por erro de execução

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

os processos estão sempre competindo pelo processador 

Criterios de comportamento de processos 

 Orientado a processador : criteiro que determina que um processo tende a utilizar todos os recursos do processador 

 operações de ES: utiliza o processador apenas para atender as requisições das opera~=ções de entrada e saida

 processo em lote: há a alocação de recursos de processamento sem a interação com o usuario para executar um determinado processo ou grupo de processos 

 processo interativo: nesse criterio., o usuario precisa participar com as entradas de dados 


As threads do processador são as menores unidades utilizadas para o processamento de informações dentro de um determinado sistema. Assim, quando um processo roda na máquina, ele pode envolver uma ou mais threads, que estão sempre ligadas umas com as outras, mesmo que trabalhem de forma independente.






























































